{"version":3,"sources":["webpack:///component---src-pages-index-js-7e82454f2b4039533bd2.js","webpack:///./src/components/ChannelSwitcher.js","webpack:///./src/components/TwitchEmbed.js","webpack:///./src/pages/index.js"],"names":["webpackJsonp","254","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","ChannelSwitcher","undefined","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","_react","_react2","_TwitchEmbed","_TwitchEmbed2","_React$Component","props","this","_this","state","selectedChannel","channels","channelData","forEach","channel","online","priority","channelPlayer","bind","channelSelector","eventHandler","_this2","event","updateChannelData","data","_extends2","setState","Twitch","Player","ONLINE","OFFLINE","_this3","createElement","style","display","width","disabled","onClick","active","embedUid","height","render","Fragment","map","React","Component","256","TwitchEmbed","apply","componentDidMount","window","_props","player","pause","listen","addEventListener","handleEvent","PLAYING","PAUSE","componentDidUpdate","play","id","261","URLSearchParams","params","location","search","streams","get","split","_ChannelSwitcher","_ChannelSwitcher2","IndexPage"],"mappings":"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","file":"component---src-pages-index-js-7e82454f2b4039533bd2.js","sourcesContent":["webpackJsonp([35783957827783],{\n\n/***/ 254:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.ChannelSwitcher = undefined;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(4);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _TwitchEmbed = __webpack_require__(256);\n\t\n\tvar _TwitchEmbed2 = _interopRequireDefault(_TwitchEmbed);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ChannelSwitcher = exports.ChannelSwitcher = function (_React$Component) {\n\t  _inherits(ChannelSwitcher, _React$Component);\n\t\n\t  function ChannelSwitcher(props) {\n\t    _classCallCheck(this, ChannelSwitcher);\n\t\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.state = {\n\t      selectedChannel: props.channels[0],\n\t      channelData: {}\n\t    };\n\t\n\t    var i = 0;\n\t    props.channels.forEach(function (channel) {\n\t      _this.state.channelData[channel] = {\n\t        online: null,\n\t        priority: i\n\t      };\n\t\n\t      i++;\n\t    });\n\t    _this.channelPlayer = _this.channelPlayer.bind(_this);\n\t    _this.channelSelector = _this.channelSelector.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  ChannelSwitcher.prototype.eventHandler = function eventHandler(channel) {\n\t    var _this2 = this;\n\t\n\t    return function (event) {\n\t      var updateChannelData = function updateChannelData(data) {\n\t        var _extends2;\n\t\n\t        _this2.setState({ channelData: _extends({}, _this2.state.channelData, (_extends2 = {}, _extends2[channel] = data, _extends2)) });\n\t      };\n\t\n\t      switch (event) {\n\t        case Twitch.Player.ONLINE:\n\t          updateChannelData({ online: true });\n\t          break;\n\t        case Twitch.Player.OFFLINE:\n\t          updateChannelData({ online: false });\n\t          break;\n\t      }\n\t    };\n\t  };\n\t\n\t  ChannelSwitcher.prototype.channelSelector = function channelSelector(channel) {\n\t    var _this3 = this;\n\t\n\t    return _react2.default.createElement(\n\t      'button',\n\t      {\n\t        style: { display: 'block', width: '100%' },\n\t        key: channel,\n\t        disabled: channel === this.state.selectedChannel,\n\t        onClick: function onClick() {\n\t          _this3.setState({ selectedChannel: channel });\n\t        }\n\t      },\n\t      (this.state.channelData[channel].online ? '⭕️' : '❌') + channel\n\t    );\n\t  };\n\t\n\t  ChannelSwitcher.prototype.channelPlayer = function channelPlayer(channel) {\n\t    return _react2.default.createElement(_TwitchEmbed2.default, {\n\t      key: channel,\n\t      active: channel === this.state.selectedChannel,\n\t      eventHandler: this.eventHandler(channel),\n\t      embedUid: 'twitch-embed-' + channel,\n\t      channel: channel,\n\t      width: '100%',\n\t      height: '89%'\n\t    });\n\t  };\n\t\n\t  ChannelSwitcher.prototype.render = function render() {\n\t    var channels = this.props.channels;\n\t\n\t    return _react2.default.createElement(\n\t      _react.Fragment,\n\t      null,\n\t      _react2.default.createElement(\n\t        'div',\n\t        { style: { display: 'inline-block', width: '30%', height: '100%' } },\n\t        channels.map(this.channelSelector)\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { style: { display: 'inline-block', width: '70%', height: '100%' } },\n\t        channels.map(this.channelPlayer)\n\t      )\n\t    );\n\t  };\n\t\n\t  return ChannelSwitcher;\n\t}(_react2.default.Component);\n\t\n\texports.default = ChannelSwitcher;\n\n/***/ }),\n\n/***/ 256:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(4);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar TwitchEmbed = function (_React$Component) {\n\t  _inherits(TwitchEmbed, _React$Component);\n\t\n\t  function TwitchEmbed() {\n\t    _classCallCheck(this, TwitchEmbed);\n\t\n\t    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n\t  }\n\t\n\t  TwitchEmbed.prototype.componentDidMount = function componentDidMount() {\n\t    var _this2 = this;\n\t\n\t    if (window.Twitch) {\n\t      var _props = this.props,\n\t          embedUid = _props.embedUid,\n\t          width = _props.width,\n\t          height = _props.height,\n\t          channel = _props.channel;\n\t\n\t      this.player = new Twitch.Player(embedUid, {\n\t        width: width,\n\t        height: height,\n\t        channel: channel\n\t      });\n\t\n\t      this.player.pause();\n\t\n\t      var listen = function listen(event) {\n\t        _this2.player.addEventListener(event, _this2.handleEvent(event));\n\t      };\n\t\n\t      listen(Twitch.Player.PLAYING);\n\t      listen(Twitch.Player.PAUSE);\n\t      listen(Twitch.Player.OFFLINE);\n\t      listen(Twitch.Player.ONLINE);\n\t    }\n\t  };\n\t\n\t  TwitchEmbed.prototype.componentDidUpdate = function componentDidUpdate() {\n\t    if (this.props.active) {\n\t      this.player.play();\n\t    } else {\n\t      this.player.pause();\n\t    }\n\t  };\n\t\n\t  TwitchEmbed.prototype.handleEvent = function handleEvent(event) {\n\t    var _this3 = this;\n\t\n\t    return function () {\n\t      //div.player-streaminfo div.player-streaminfo__game a.qa-game-name\n\t\n\t      switch (event) {\n\t        case Twitch.Player.PLAYING:\n\t          if (!_this3.props.active) {\n\t            _this3.player.pause();\n\t          }\n\t          break;\n\t      }\n\t\n\t      _this3.props.eventHandler(event);\n\t    };\n\t  };\n\t\n\t  TwitchEmbed.prototype.render = function render() {\n\t    return _react2.default.createElement('div', {\n\t      id: this.props.embedUid,\n\t      style: {\n\t        display: this.props.active ? 'block' : 'none'\n\t      }\n\t    });\n\t  };\n\t\n\t  return TwitchEmbed;\n\t}(_react2.default.Component);\n\t\n\texports.default = TwitchEmbed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 261:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(4);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _ChannelSwitcher = __webpack_require__(254);\n\t\n\tvar _ChannelSwitcher2 = _interopRequireDefault(_ChannelSwitcher);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction channels() {\n\t  if (typeof window !== 'undefined' && window.URLSearchParams) {\n\t    var params = new URLSearchParams(window.location.search);\n\t    var streams = params.get('streams');\n\t    return streams.split(',');\n\t  }\n\t\n\t  return [];\n\t}\n\t\n\tvar IndexPage = function IndexPage() {\n\t  return _react2.default.createElement(_ChannelSwitcher2.default, {\n\t    channels: channels()\n\t  });\n\t};\n\t\n\texports.default = IndexPage;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-index-js-7e82454f2b4039533bd2.js","import React, { Fragment } from 'react'\n\nimport TwitchEmbed from '../components/TwitchEmbed'\n\nexport class ChannelSwitcher extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedChannel: props.channels[0],\n      channelData: {}\n    }\n\n    let i = 0\n    props.channels.forEach(channel => {\n      this.state.channelData[channel] = {\n        online: null,\n        priority: i,\n      }\n\n      i++\n    })\n    this.channelPlayer = this.channelPlayer.bind(this)\n    this.channelSelector = this.channelSelector.bind(this)\n  }\n\n  eventHandler(channel) {\n    return event =>  {\n      const updateChannelData = data => {\n        this.setState({ channelData: { ...this.state.channelData, [channel]: data } })\n      }\n\n      switch (event) {\n        case Twitch.Player.ONLINE:\n          updateChannelData({ online: true })\n          break\n        case Twitch.Player.OFFLINE:\n          updateChannelData({ online: false })\n          break\n      }\n    }\n  }\n\n  channelSelector(channel) {\n    return (\n      <button\n        style={{ display: 'block', width: '100%' }}\n        key={channel}\n        disabled={channel === this.state.selectedChannel}\n        onClick={() => { this.setState({ selectedChannel: channel }) }}\n      >\n        {(this.state.channelData[channel].online ? '⭕️' : '❌') + channel}\n      </button>\n    )\n  }\n\n  channelPlayer(channel) {\n    return (\n      <TwitchEmbed\n        key={channel}\n        active={channel === this.state.selectedChannel}\n        eventHandler={this.eventHandler(channel)}\n        embedUid={`twitch-embed-${channel}`}\n        channel={channel}\n        width=\"100%\"\n        height=\"89%\"\n      />\n    )\n  }\n\n\n  render() {\n    const { channels } = this.props\n    return (\n      <Fragment>\n        <div style={{ display: 'inline-block', width: '30%', height: '100%' }}>\n          {channels.map(this.channelSelector)}\n        </div>\n        <div style={{ display: 'inline-block', width: '70%', height: '100%' }}>\n          {channels.map(this.channelPlayer)}\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default ChannelSwitcher\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/ChannelSwitcher.js","import React from 'react'\n\nclass TwitchEmbed extends React.Component {\n  componentDidMount() {\n    if (window.Twitch) {\n      const { embedUid, width, height, channel } = this.props\n      this.player = new Twitch.Player(embedUid, {\n        width,\n        height,\n        channel,\n      })\n\n      this.player.pause()\n\n      const listen = event => { this.player.addEventListener(event, this.handleEvent(event)) }\n\n      listen(Twitch.Player.PLAYING)\n      listen(Twitch.Player.PAUSE)\n      listen(Twitch.Player.OFFLINE)\n      listen(Twitch.Player.ONLINE)\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.active) {\n      this.player.play()\n    } else {\n      this.player.pause()\n    }\n  }\n\n  handleEvent(event) {\n    return () => {\n      //div.player-streaminfo div.player-streaminfo__game a.qa-game-name\n\n      switch (event) {\n        case Twitch.Player.PLAYING:\n          if (!this.props.active) { this.player.pause() }\n          break\n      }\n\n      this.props.eventHandler(event)\n    }\n  }\n\n  render() {\n    return (\n      <div\n        id={this.props.embedUid}\n        style={{\n          display: this.props.active ? 'block' : 'none',\n        }}\n      />\n    )\n  }\n}\n\nexport default TwitchEmbed\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/TwitchEmbed.js","import React from 'react'\n\nimport ChannelSwitcher from '../components/ChannelSwitcher'\n\nfunction channels() {\n  if (typeof window !== 'undefined' && window.URLSearchParams) {\n    const params = new URLSearchParams(window.location.search)\n    const streams = params.get('streams')\n    return streams.split(',')\n  }\n\n  return []\n}\n\nconst IndexPage = () => (\n  <ChannelSwitcher\n    channels={channels()}\n  />\n)\n\nexport default IndexPage\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/index.js"],"sourceRoot":""}